// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.21.12
// source: protocols/service.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceHealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceHealthCheckRequest) Reset() {
	*x = ServiceHealthCheckRequest{}
	mi := &file_protocols_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceHealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceHealthCheckRequest) ProtoMessage() {}

func (x *ServiceHealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceHealthCheckRequest.ProtoReflect.Descriptor instead.
func (*ServiceHealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_protocols_service_proto_rawDescGZIP(), []int{0}
}

type ServiceHealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // OK or NOK
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceHealthCheckResponse) Reset() {
	*x = ServiceHealthCheckResponse{}
	mi := &file_protocols_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceHealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceHealthCheckResponse) ProtoMessage() {}

func (x *ServiceHealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceHealthCheckResponse.ProtoReflect.Descriptor instead.
func (*ServiceHealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_protocols_service_proto_rawDescGZIP(), []int{1}
}

func (x *ServiceHealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AddPrescriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,2,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	PatientName   string                 `protobuf:"bytes,3,opt,name=patient_name,json=patientName,proto3" json:"patient_name,omitempty"`
	DoctorName    string                 `protobuf:"bytes,4,opt,name=doctor_name,json=doctorName,proto3" json:"doctor_name,omitempty"`
	Modifications []string               `protobuf:"bytes,5,rep,name=modifications,proto3" json:"modifications,omitempty"`
	Features      []string               `protobuf:"bytes,6,rep,name=features,proto3" json:"features,omitempty"`
	OdSpf         float32                `protobuf:"fixed32,7,opt,name=od_spf,json=odSpf,proto3" json:"od_spf,omitempty"`
	OdCyl         float32                `protobuf:"fixed32,8,opt,name=od_cyl,json=odCyl,proto3" json:"od_cyl,omitempty"`
	OdAx          float32                `protobuf:"fixed32,9,opt,name=od_ax,json=odAx,proto3" json:"od_ax,omitempty"`
	OsSpf         float32                `protobuf:"fixed32,10,opt,name=os_spf,json=osSpf,proto3" json:"os_spf,omitempty"`
	OsCyl         float32                `protobuf:"fixed32,11,opt,name=os_cyl,json=osCyl,proto3" json:"os_cyl,omitempty"`
	OsAx          float32                `protobuf:"fixed32,12,opt,name=os_ax,json=osAx,proto3" json:"os_ax,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPrescriptionRequest) Reset() {
	*x = AddPrescriptionRequest{}
	mi := &file_protocols_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPrescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPrescriptionRequest) ProtoMessage() {}

func (x *AddPrescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPrescriptionRequest.ProtoReflect.Descriptor instead.
func (*AddPrescriptionRequest) Descriptor() ([]byte, []int) {
	return file_protocols_service_proto_rawDescGZIP(), []int{2}
}

func (x *AddPrescriptionRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *AddPrescriptionRequest) GetPatientName() string {
	if x != nil {
		return x.PatientName
	}
	return ""
}

func (x *AddPrescriptionRequest) GetDoctorName() string {
	if x != nil {
		return x.DoctorName
	}
	return ""
}

func (x *AddPrescriptionRequest) GetModifications() []string {
	if x != nil {
		return x.Modifications
	}
	return nil
}

func (x *AddPrescriptionRequest) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *AddPrescriptionRequest) GetOdSpf() float32 {
	if x != nil {
		return x.OdSpf
	}
	return 0
}

func (x *AddPrescriptionRequest) GetOdCyl() float32 {
	if x != nil {
		return x.OdCyl
	}
	return 0
}

func (x *AddPrescriptionRequest) GetOdAx() float32 {
	if x != nil {
		return x.OdAx
	}
	return 0
}

func (x *AddPrescriptionRequest) GetOsSpf() float32 {
	if x != nil {
		return x.OsSpf
	}
	return 0
}

func (x *AddPrescriptionRequest) GetOsCyl() float32 {
	if x != nil {
		return x.OsCyl
	}
	return 0
}

func (x *AddPrescriptionRequest) GetOsAx() float32 {
	if x != nil {
		return x.OsAx
	}
	return 0
}

type GetPrescriptionIDsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPrescriptionIDsRequest) Reset() {
	*x = GetPrescriptionIDsRequest{}
	mi := &file_protocols_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrescriptionIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrescriptionIDsRequest) ProtoMessage() {}

func (x *GetPrescriptionIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrescriptionIDsRequest.ProtoReflect.Descriptor instead.
func (*GetPrescriptionIDsRequest) Descriptor() ([]byte, []int) {
	return file_protocols_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetPrescriptionIDsRequest) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

type GetPrescriptionIDsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPrescriptionIDsResponse) Reset() {
	*x = GetPrescriptionIDsResponse{}
	mi := &file_protocols_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrescriptionIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrescriptionIDsResponse) ProtoMessage() {}

func (x *GetPrescriptionIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrescriptionIDsResponse.ProtoReflect.Descriptor instead.
func (*GetPrescriptionIDsResponse) Descriptor() ([]byte, []int) {
	return file_protocols_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetPrescriptionIDsResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type AddPrescriptionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPrescriptionResponse) Reset() {
	*x = AddPrescriptionResponse{}
	mi := &file_protocols_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPrescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPrescriptionResponse) ProtoMessage() {}

func (x *AddPrescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPrescriptionResponse.ProtoReflect.Descriptor instead.
func (*AddPrescriptionResponse) Descriptor() ([]byte, []int) {
	return file_protocols_service_proto_rawDescGZIP(), []int{5}
}

func (x *AddPrescriptionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CheckPrescriptionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPrescriptionRequest) Reset() {
	*x = CheckPrescriptionRequest{}
	mi := &file_protocols_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPrescriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPrescriptionRequest) ProtoMessage() {}

func (x *CheckPrescriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPrescriptionRequest.ProtoReflect.Descriptor instead.
func (*CheckPrescriptionRequest) Descriptor() ([]byte, []int) {
	return file_protocols_service_proto_rawDescGZIP(), []int{6}
}

func (x *CheckPrescriptionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CheckPrescriptionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     string                 `protobuf:"bytes,2,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	PatientName   string                 `protobuf:"bytes,3,opt,name=patient_name,json=patientName,proto3" json:"patient_name,omitempty"`
	DoctorName    string                 `protobuf:"bytes,4,opt,name=doctor_name,json=doctorName,proto3" json:"doctor_name,omitempty"`
	Modifications []string               `protobuf:"bytes,5,rep,name=modifications,proto3" json:"modifications,omitempty"`
	Features      []string               `protobuf:"bytes,6,rep,name=features,proto3" json:"features,omitempty"`
	OdSpf         float32                `protobuf:"fixed32,7,opt,name=od_spf,json=odSpf,proto3" json:"od_spf,omitempty"`
	OdCyl         float32                `protobuf:"fixed32,8,opt,name=od_cyl,json=odCyl,proto3" json:"od_cyl,omitempty"`
	OdAx          float32                `protobuf:"fixed32,9,opt,name=od_ax,json=odAx,proto3" json:"od_ax,omitempty"`
	OsSpf         float32                `protobuf:"fixed32,10,opt,name=os_spf,json=osSpf,proto3" json:"os_spf,omitempty"`
	OsCyl         float32                `protobuf:"fixed32,11,opt,name=os_cyl,json=osCyl,proto3" json:"os_cyl,omitempty"`
	OsAx          float32                `protobuf:"fixed32,12,opt,name=os_ax,json=osAx,proto3" json:"os_ax,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckPrescriptionResponse) Reset() {
	*x = CheckPrescriptionResponse{}
	mi := &file_protocols_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckPrescriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPrescriptionResponse) ProtoMessage() {}

func (x *CheckPrescriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPrescriptionResponse.ProtoReflect.Descriptor instead.
func (*CheckPrescriptionResponse) Descriptor() ([]byte, []int) {
	return file_protocols_service_proto_rawDescGZIP(), []int{7}
}

func (x *CheckPrescriptionResponse) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *CheckPrescriptionResponse) GetPatientName() string {
	if x != nil {
		return x.PatientName
	}
	return ""
}

func (x *CheckPrescriptionResponse) GetDoctorName() string {
	if x != nil {
		return x.DoctorName
	}
	return ""
}

func (x *CheckPrescriptionResponse) GetModifications() []string {
	if x != nil {
		return x.Modifications
	}
	return nil
}

func (x *CheckPrescriptionResponse) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *CheckPrescriptionResponse) GetOdSpf() float32 {
	if x != nil {
		return x.OdSpf
	}
	return 0
}

func (x *CheckPrescriptionResponse) GetOdCyl() float32 {
	if x != nil {
		return x.OdCyl
	}
	return 0
}

func (x *CheckPrescriptionResponse) GetOdAx() float32 {
	if x != nil {
		return x.OdAx
	}
	return 0
}

func (x *CheckPrescriptionResponse) GetOsSpf() float32 {
	if x != nil {
		return x.OsSpf
	}
	return 0
}

func (x *CheckPrescriptionResponse) GetOsCyl() float32 {
	if x != nil {
		return x.OsCyl
	}
	return 0
}

func (x *CheckPrescriptionResponse) GetOsAx() float32 {
	if x != nil {
		return x.OsAx
	}
	return 0
}

type DebuggerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cmd           string                 `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Pin           string                 `protobuf:"bytes,2,opt,name=pin,proto3" json:"pin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebuggerRequest) Reset() {
	*x = DebuggerRequest{}
	mi := &file_protocols_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebuggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebuggerRequest) ProtoMessage() {}

func (x *DebuggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebuggerRequest.ProtoReflect.Descriptor instead.
func (*DebuggerRequest) Descriptor() ([]byte, []int) {
	return file_protocols_service_proto_rawDescGZIP(), []int{8}
}

func (x *DebuggerRequest) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *DebuggerRequest) GetPin() string {
	if x != nil {
		return x.Pin
	}
	return ""
}

type DebuggerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stdout        string                 `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        string                 `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebuggerResponse) Reset() {
	*x = DebuggerResponse{}
	mi := &file_protocols_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebuggerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebuggerResponse) ProtoMessage() {}

func (x *DebuggerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebuggerResponse.ProtoReflect.Descriptor instead.
func (*DebuggerResponse) Descriptor() ([]byte, []int) {
	return file_protocols_service_proto_rawDescGZIP(), []int{9}
}

func (x *DebuggerResponse) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *DebuggerResponse) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

var File_protocols_service_proto protoreflect.FileDescriptor

var file_protocols_service_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x1a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc3, 0x02, 0x0a, 0x16,
	0x41, 0x64, 0x64, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x6f, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6f,
	0x64, 0x5f, 0x73, 0x70, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x6f, 0x64, 0x53,
	0x70, 0x66, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x64, 0x5f, 0x63, 0x79, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x6f, 0x64, 0x43, 0x79, 0x6c, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x64, 0x5f,
	0x61, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6f, 0x64, 0x41, 0x78, 0x12, 0x15,
	0x0a, 0x06, 0x6f, 0x73, 0x5f, 0x73, 0x70, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x6f, 0x73, 0x53, 0x70, 0x66, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x73, 0x5f, 0x63, 0x79, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x6f, 0x73, 0x43, 0x79, 0x6c, 0x12, 0x13, 0x0a, 0x05,
	0x6f, 0x73, 0x5f, 0x61, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6f, 0x73, 0x41,
	0x78, 0x22, 0x3a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x2e, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x29, 0x0a,
	0x17, 0x41, 0x64, 0x64, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0xc6, 0x02, 0x0a, 0x19, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x74, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x64, 0x5f, 0x73, 0x70,
	0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x6f, 0x64, 0x53, 0x70, 0x66, 0x12, 0x15,
	0x0a, 0x06, 0x6f, 0x64, 0x5f, 0x63, 0x79, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x6f, 0x64, 0x43, 0x79, 0x6c, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x64, 0x5f, 0x61, 0x78, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6f, 0x64, 0x41, 0x78, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x73,
	0x5f, 0x73, 0x70, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x6f, 0x73, 0x53, 0x70,
	0x66, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x73, 0x5f, 0x63, 0x79, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x6f, 0x73, 0x43, 0x79, 0x6c, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x73, 0x5f, 0x61,
	0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6f, 0x73, 0x41, 0x78, 0x22, 0x35, 0x0a,
	0x0f, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x70, 0x69, 0x6e, 0x22, 0x42, 0x0a, 0x10, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f,
	0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x32, 0xfc, 0x03, 0x0a, 0x0d, 0x45, 0x79, 0x65,
	0x53, 0x65, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x12, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x12, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x50, 0x72, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x64, 0x64, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x12, 0x28, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x66, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x72, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x67, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_protocols_service_proto_rawDescOnce sync.Once
	file_protocols_service_proto_rawDescData []byte
)

func file_protocols_service_proto_rawDescGZIP() []byte {
	file_protocols_service_proto_rawDescOnce.Do(func() {
		file_protocols_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protocols_service_proto_rawDesc), len(file_protocols_service_proto_rawDesc)))
	})
	return file_protocols_service_proto_rawDescData
}

var file_protocols_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_protocols_service_proto_goTypes = []any{
	(*ServiceHealthCheckRequest)(nil),  // 0: service.proto.ServiceHealthCheckRequest
	(*ServiceHealthCheckResponse)(nil), // 1: service.proto.ServiceHealthCheckResponse
	(*AddPrescriptionRequest)(nil),     // 2: service.proto.AddPrescriptionRequest
	(*GetPrescriptionIDsRequest)(nil),  // 3: service.proto.GetPrescriptionIDsRequest
	(*GetPrescriptionIDsResponse)(nil), // 4: service.proto.GetPrescriptionIDsResponse
	(*AddPrescriptionResponse)(nil),    // 5: service.proto.AddPrescriptionResponse
	(*CheckPrescriptionRequest)(nil),   // 6: service.proto.CheckPrescriptionRequest
	(*CheckPrescriptionResponse)(nil),  // 7: service.proto.CheckPrescriptionResponse
	(*DebuggerRequest)(nil),            // 8: service.proto.DebuggerRequest
	(*DebuggerResponse)(nil),           // 9: service.proto.DebuggerResponse
}
var file_protocols_service_proto_depIdxs = []int32{
	0, // 0: service.proto.EyeSeeService.ServiceHealthCheck:input_type -> service.proto.ServiceHealthCheckRequest
	2, // 1: service.proto.EyeSeeService.AddPrescription:input_type -> service.proto.AddPrescriptionRequest
	3, // 2: service.proto.EyeSeeService.GetPrescriptionIDs:input_type -> service.proto.GetPrescriptionIDsRequest
	6, // 3: service.proto.EyeSeeService.CheckPrescription:input_type -> service.proto.CheckPrescriptionRequest
	8, // 4: service.proto.EyeSeeService.Debugger:input_type -> service.proto.DebuggerRequest
	1, // 5: service.proto.EyeSeeService.ServiceHealthCheck:output_type -> service.proto.ServiceHealthCheckResponse
	5, // 6: service.proto.EyeSeeService.AddPrescription:output_type -> service.proto.AddPrescriptionResponse
	4, // 7: service.proto.EyeSeeService.GetPrescriptionIDs:output_type -> service.proto.GetPrescriptionIDsResponse
	7, // 8: service.proto.EyeSeeService.CheckPrescription:output_type -> service.proto.CheckPrescriptionResponse
	9, // 9: service.proto.EyeSeeService.Debugger:output_type -> service.proto.DebuggerResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protocols_service_proto_init() }
func file_protocols_service_proto_init() {
	if File_protocols_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protocols_service_proto_rawDesc), len(file_protocols_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocols_service_proto_goTypes,
		DependencyIndexes: file_protocols_service_proto_depIdxs,
		MessageInfos:      file_protocols_service_proto_msgTypes,
	}.Build()
	File_protocols_service_proto = out.File
	file_protocols_service_proto_goTypes = nil
	file_protocols_service_proto_depIdxs = nil
}
