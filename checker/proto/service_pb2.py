# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: service.proto
# Protobuf Python Version: 5.29.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    0,
    '',
    'service.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rservice.proto\x12\rservice.proto\"\x1b\n\x19ServiceHealthCheckRequest\",\n\x1aServiceHealthCheckResponse\x12\x0e\n\x06status\x18\x01 \x01(\t\"\xde\x01\n\x16\x41\x64\x64PrescriptionRequest\x12\x12\n\npatient_id\x18\x02 \x01(\t\x12\x14\n\x0cpatient_name\x18\x03 \x01(\t\x12\x13\n\x0b\x64octor_name\x18\x04 \x01(\t\x12\x15\n\rmodifications\x18\x05 \x03(\t\x12\x10\n\x08\x66\x65\x61tures\x18\x06 \x03(\t\x12\x0e\n\x06od_spf\x18\x07 \x01(\x02\x12\x0e\n\x06od_cyl\x18\x08 \x01(\x02\x12\r\n\x05od_ax\x18\t \x01(\x02\x12\x0e\n\x06os_spf\x18\n \x01(\x02\x12\x0e\n\x06os_cyl\x18\x0b \x01(\x02\x12\r\n\x05os_ax\x18\x0c \x01(\x02\"/\n\x19GetPrescriptionIDsRequest\x12\x12\n\npatient_id\x18\x01 \x01(\t\")\n\x1aGetPrescriptionIDsResponse\x12\x0b\n\x03ids\x18\x01 \x03(\t\"%\n\x17\x41\x64\x64PrescriptionResponse\x12\n\n\x02id\x18\x01 \x01(\t\"&\n\x18\x43heckPrescriptionRequest\x12\n\n\x02id\x18\x01 \x01(\t\"\xe1\x01\n\x19\x43heckPrescriptionResponse\x12\x12\n\npatient_id\x18\x02 \x01(\t\x12\x14\n\x0cpatient_name\x18\x03 \x01(\t\x12\x13\n\x0b\x64octor_name\x18\x04 \x01(\t\x12\x15\n\rmodifications\x18\x05 \x03(\t\x12\x10\n\x08\x66\x65\x61tures\x18\x06 \x03(\t\x12\x0e\n\x06od_spf\x18\x07 \x01(\x02\x12\x0e\n\x06od_cyl\x18\x08 \x01(\x02\x12\r\n\x05od_ax\x18\t \x01(\x02\x12\x0e\n\x06os_spf\x18\n \x01(\x02\x12\x0e\n\x06os_cyl\x18\x0b \x01(\x02\x12\r\n\x05os_ax\x18\x0c \x01(\x02\x32\xaf\x03\n\rEyeSeeService\x12i\n\x12ServiceHealthCheck\x12(.service.proto.ServiceHealthCheckRequest\x1a).service.proto.ServiceHealthCheckResponse\x12`\n\x0f\x41\x64\x64Prescription\x12%.service.proto.AddPrescriptionRequest\x1a&.service.proto.AddPrescriptionResponse\x12i\n\x12GetPrescriptionIDs\x12(.service.proto.GetPrescriptionIDsRequest\x1a).service.proto.GetPrescriptionIDsResponse\x12\x66\n\x11\x43heckPrescription\x12\'.service.proto.CheckPrescriptionRequest\x1a(.service.proto.CheckPrescriptionResponseB\x03Z\x01.b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z\001.'
  _globals['_SERVICEHEALTHCHECKREQUEST']._serialized_start=32
  _globals['_SERVICEHEALTHCHECKREQUEST']._serialized_end=59
  _globals['_SERVICEHEALTHCHECKRESPONSE']._serialized_start=61
  _globals['_SERVICEHEALTHCHECKRESPONSE']._serialized_end=105
  _globals['_ADDPRESCRIPTIONREQUEST']._serialized_start=108
  _globals['_ADDPRESCRIPTIONREQUEST']._serialized_end=330
  _globals['_GETPRESCRIPTIONIDSREQUEST']._serialized_start=332
  _globals['_GETPRESCRIPTIONIDSREQUEST']._serialized_end=379
  _globals['_GETPRESCRIPTIONIDSRESPONSE']._serialized_start=381
  _globals['_GETPRESCRIPTIONIDSRESPONSE']._serialized_end=422
  _globals['_ADDPRESCRIPTIONRESPONSE']._serialized_start=424
  _globals['_ADDPRESCRIPTIONRESPONSE']._serialized_end=461
  _globals['_CHECKPRESCRIPTIONREQUEST']._serialized_start=463
  _globals['_CHECKPRESCRIPTIONREQUEST']._serialized_end=501
  _globals['_CHECKPRESCRIPTIONRESPONSE']._serialized_start=504
  _globals['_CHECKPRESCRIPTIONRESPONSE']._serialized_end=729
  _globals['_EYESEESERVICE']._serialized_start=732
  _globals['_EYESEESERVICE']._serialized_end=1163
# @@protoc_insertion_point(module_scope)
